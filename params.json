{"name":"GitHub Tutorial","tagline":"Git Good with GitHub!","body":"# GitHub Tutorial\r\n\r\n_by Derek Conde Barranco_\r\n\r\n---\r\n## Git vs. GitHub\r\n###Git\r\n* `Git` is version control by keeping **\"snapshots\"** of code\r\n   * Runs in the command line but doesn't require github. \r\n   * View past commits(snapshots) to refer back to the original code that you've created\r\n   * Use commits to go back to a version of your code in case anything goes wrong or if there's a groundbreaking mistake\r\n\r\n###Github\r\n* `Github` stores your code in the cloud(**internet**) and is used to check changes from Git.\r\n    * `Github` is also used to collab with others on the same files.\r\n    * Can be used to interact with code and snapshots from Git.\r\n    * Runs in the command line\r\n     * Uses git to interact with code from the snapshots  \r\n     * Once you use git,it becomes a repository\r\n---   \r\n## Initial Setup\r\n1. To first start setting up your `github`, you mush create an account on [github.com](http://www.github.com)\r\n   * _Requires an email and password in order to sign up._\r\n   * _You also need to create a username for your_ `github`\r\n2. Make sure that have already setup your local machine with an IDE (**ex:nitrous and cloud 9**)\r\n3. Inside of your IDE on your local machine, tell `git` to `git config --global user.name` \"**Insert your username here**\"\r\n  * _You need this in order for your commits to be labeled correctly_   \r\n4. Then tell `Git` your email address that will be used with your Git commits by `git config --global user.email` \"**Insert your email address**\"   \r\n  * _make sure that it's the same email that you use in `Github`._\r\n5. If you're setting up `github` with an ssh key, find your SSH key in your c9 IDE by going into the dashboard and opening up settings\r\n6. You then go to ssh-keys and copy the correct key to Github to add it in.\r\n7. The last step to confirm your IDE to `github` is to do `ssh -T git@github.com` and you're all set!\r\n\r\n---\r\n## Repository Setup\r\n###Local Repository Setup\r\n1. To set up a local repository in cloud 9, make sure you added your directory to it by `mkdir file-repo` and then `cd file-repo`  \r\n2. If you are unsure that you are in your repo in the command, type `pwd`\r\n3. In order to initialize your repo, you must type `git init`\r\n4. Later you `git config --global user.name \"FirstLastName\"` &  `git config --global user.email \"YourEmailHere\"` if you have not done so already\r\n5. Create a file by `touch README.me` and then edit and save the file\r\n6. After saving your readme,`git status` to check if file needs to be committed   \r\n7. `git add README.me` to add your file to the stage and then `git commit -m \"Insert Message here\" to take a snapshot of your file\r\n###Remote Remote Setup\r\n1. To setup a remote repo you go to your `github` and on the top-right of the page, click the plus sign and then go to new repository.   \r\n2. Then you type in you repository name.\r\n   * _MAKE SURE THAT THE NAME MATCHES WITH THE REPO!!_ \r\n3. After that, get ssh for the local repo by copying and pasting `git push -u \"???\"` & `git remote add origin \"???\"` one line at a time.\r\n   *  This is required in order to send your commits from the local repo from your IDE to the remote repo from `github`   \r\n4. Try to refresh your `github` page and check if your commits are there, if you can find then you are all set.\r\n---\r\n## Workflow & Commands\r\n* `git init` Calls your directory, repo for version control\r\n* `git status` View what files have been edited so far or that need to be committed\r\n* `git add file.ext` Adds the file to the stage for it to be committed(**snapshot**)\r\n* `git add . ` Adds entire directory to the stage.\r\n* `git commit -m \"short/specific message\"` Commits the file and write a small message with it\r\n     * You need to write a message to the commit or else it will not work\r\n* `git log` See your past commit on git\r\n* `git help` Gives you help with commands in case you forget\r\n* `git diff` View the difference between your code and your previous commit\r\n* `git push` Send your commits from the local repo to your remote repo(`github`)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}